<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.lesson_5_spring.service.LocationServiceTest" tests="9" skipped="0" failures="0" errors="0" timestamp="2024-10-03T12:29:05" hostname="DESKTOP-EQUD6SE" time="0.047">
  <properties/>
  <testcase name="deleteLocation_shouldDeleteLocation_whenLocationExists()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.002"/>
  <testcase name="getLocationById_shouldReturnLocation_whenLocationExists()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.006"/>
  <testcase name="updateLocation_shouldSaveLocation_whenLocationExists()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.005"/>
  <testcase name="addLocation_shouldThrowRuntimeException_whenLocationAlreadyExists()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.007"/>
  <testcase name="updateLocation_shouldThrowRuntimeException_whenLocationNotFound()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.003"/>
  <testcase name="addLocation_shouldSaveLocation_whenLocationDoesNotExist()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.002"/>
  <testcase name="findAll_shouldReturnListOfLocations()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.001"/>
  <testcase name="deleteLocation_shouldThrowRuntimeException_whenLocationNotFound()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.003"/>
  <testcase name="getLocationById_shouldThrowRuntimeException_whenLocationNotFound()" classname="org.example.lesson_5_spring.service.LocationServiceTest" time="0.003"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
